

#TODO: Completar las credenciales de la base de datos
#spring.datasource.url=jdbc:postgresql://ec2-174-129-225-160.compute-1.amazonaws.com:5432/de88ohquu9dnpq
#spring.datasource.username=mvhrgalvlebuit
#spring.datasource.password=7a8791397f99773670bc89f5cdd7693087e4291efee3100bd35bd4c8dd968015


#spring.jpa.show-sql = false
#para pruebas nada mas
#spring.jpa.show-sql = true
#
#
##En none la base de datos no se elimina y vuelve a cargar.
#spring.jpa.hibernate.ddl-auto = update
#para pruebas nada mas. Con create la base se limpia y se vuelven a cargar todos los objetos de cero.
#spring.jpa.hibernate.ddl-auto = update

# Descomentar para produccion. Utiliza postgre como dialect para heroku
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL10Dialect
#para pruebas nada mas. Hay que habilitarlo para usar la base de datos local
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true


##A la hora de correr tests, comentar lo de arriba menos estas properties
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
#
##TODO: CAMBIAR EL PATH PARA DEJAR EL ARCHIVO EN EL PROYECTO
##spring.datasource.url=jdbc:h2:file:D:/PROGRAMACION/demodb
#spring.jpa.hibernate.ddl-auto = create
#spring.jpa.show-sql = true

#JWT
jwt.secret-key=almightyjava

server.port=8080
server.servlet.context-path=/rest


#Mail credentials
#TODO: llenar las credenciales
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=fede.sarquis@gmail.com
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


##CREA ARCHIVO LOCAL DE BASE DE DATOS H2 EN RESOURCES/DATABASE
## update / create
spring.datasource.url=jdbc:h2:./src/main/resources/database/db_file
spring.jpa.hibernate.ddl-auto = create
spring.jpa.show-sql = false